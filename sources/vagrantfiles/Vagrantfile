$docker = <<-EOS
sudo apt install -y ca-certificates curl gnupg lsb-release
sudo apt remove -y docker docker-engine docker.io containerd runc
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose
sudo systemctl enable --now docker
sudo usermod -aG docker $USER
sudo apt install -y python3-pip
sudo pip install docker
EOS

$zsh = <<-EOS
sudo apt install -y zsh git
sudo chsh -s /bin/zsh $USER
yes | sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
sed -i 's/^plugins=/#&/' $HOME/.zshrc
echo "plugins=(git colored-man-pages aliases copyfile copypath zsh-syntax-highlighting jsontools)" >> $HOME/.zshrc
sed -i "s/^ZSH_THEME=.*/ZSH_THEME='agnoster'/g" $HOME/.zshrc
EOS


Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/jammy64"
  config.vm.boot_timeout = 1000
  config.vm.provision "shell", inline: $zsh, privileged: false

  config.vm.define "dmz" do |dmz|
    dmz.vm.hostname "dmz"
    dmz.vm.network "private_network", ip: "192.168.99.10"
    dmz.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 2
      v.name = "dmz"
    end
  end

  config.vm.define "worker1" do |worker|
    worker.vm.hostname "worker1"
    worker.vm.provision "shell", inline: $docker
    worker.vm.network "private_network", ip: "192.168.99.11"
    worker.vm.provider "virtualbox" do |v|
      v.name = "worker_#{i}"
      v.memory = 4096
      v.cpus = 4
    end
  end


  (2..3).each do |i|
    config.vm.define "worker#{i}" do |worker|
      worker.vm.hostname "worker#{i}"
      worker.vm.provision "shell", inline: $docker
      worker.vm.network "private_network", ip: "192.168.99.1#{i}"
      worker.vm.provider "virtualbox" do |v|
        v.name = "worker_#{i}"
        v.memory = 1536
        v.cpus = 2
      end
    end
  end
end

